# nlp section

snippet nlp-js-dep:
  name: "JavaScript dependency"
  prefix: "js-01"
  scope: "json"
  body: |
    "axios" :"1.7.7"

# Emotion analysis section

snippet emotion-bearer:
  name: "Emotion bearer"
  prefix: "js-02"
  scope: "javascript"
  body: |
    const options = {
      headers: {
        'Content-Type': 'application/json',
        'Authorization' : 'Bearer ' + process.env.OVH_AI_ENDPOINTS_ACCESS_TOKEN
      }
    };

snippet emotion-call:
  name: "Emotion call"
  prefix: "js-03"
  scope: "javascript"
  body: |    
    axios
      .post('https://roberta-base-go-emotions.endpoints.kepler.ai.cloud.ovh.net/api/text2emotions', 'I love JS', options)
      .then(res => {
        const sortedEmotions = Object.entries(res.data).sort((a, b) => b[1] - a[1]);
        console.log(sortedEmotions[0][0]);
      })
      .catch(err => {
        console.error(err)
      })

# Product review section

snippet product-bearer:
  name: "Product bearer"
  prefix: "js-06"
  scope: "javascript"
  body: |
    const options = {
      headers: {
        'Content-Type': 'application/json',
        'Authorization' : 'Bearer ' + process.env.OVH_AI_ENDPOINTS_ACCESS_TOKEN
      }
    };

snippet product-call:
  name: "Product call"
  prefix: "js-07"
  scope: "javascript"
  body: |    
    axios
      .post("https://bert-base-multilingual-uncased-sentiment.endpoints.kepler.ai.cloud.ovh.net/api/text2sentiments", "Bon produit, envoyé dans les temps. Service après vente perfectible.", options)
      .then((res) => {
        const maxRating = Math.max(...Object.values(res.data));
        const maxRatingKey = Object.keys(res.data).find(key => res.data[key] === maxRating);
        
        const numStars = parseInt(maxRatingKey.split(' ')[0]);

        let starString = '';
        for (let i = 0; i < numStars; i++) {
          starString += '⭐️';
        }

        console.log(starString);    
      })
      .catch((err) => {
        console.error(err);
      });

# Text classification section

snippet text-class-bearer:
  name: "Text classification bearer"
  prefix: "js-04"
  scope: "javascript"
  body: |
    const options = {
      headers: {
        'Content-Type': 'application/json',
        'Authorization' : 'Bearer ' + process.env.OVH_AI_ENDPOINTS_ACCESS_TOKEN
      }
    };

snippet text-class-call:
  name: "Text classification call"
  prefix: "js-05"
  scope: "javascript"
  body: |    
    axios
      .post("https://bert-base-ner.endpoints.kepler.ai.cloud.ovh.net/api/text2ner", "My name is Clara and I live in Berkeley, California.", options)
      .then((res) => {
        console.log(res.data);
        const output = res.data.map((entity) => {
          let description;
          switch (entity.entity) {
            case "B-PER":
              description = "is a person";
              break;
            case "B-LOC":
              description = "a location";
              break;
            case "B-ORG":
              description = "an organization";
              break;
            case "B-MISC":
              description = "other";
              break;

            default:
              description = "undefined";
          }
          return `\${entity.word} is \${description}`;
        });

        console.log(output.join(", "));
      })
      .catch((err) => {
        console.error(err);
      });
